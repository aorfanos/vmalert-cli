---
name: Release .deb

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

jobs:
  release:
    name: Build and upload release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: "1.14.13"

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Build binary
        run: |
          go build -o deb/vmalertcli/usr/local/bin/vmalert-cli
        env:
          GOOS: linux
          GOARCH: amd64

      - name: Build .deb file
        run: dpkg-deb --build vmalert-cli-${{ env.RELEASE_VERSION }}
        working-directory: deb/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }} - deb
          draft: false
          prerelease: false

      - name: Upload Release Asset (.deb)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: deb/vmalert-cli-${{ env.RELEASE_VERSION }}.deb
          asset_name: vmalertcli-latest-amd64
          asset_content_type: application/octet-stream
